# -*- coding: utf-8 -*-
#
# Set up with:
#  docker-compose up --build -d

version: '3.6'

# ####################################################################
# AK8PO Weather Mapper
# Filip Findura
# ####################################################################

services:

  # ----------------------------
  # Database (PostgreSQL)
  # ----------------------------
  database:
    image: finduraf/ak8po_postgres:dev
    build: ./db
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'ak8po'
      POSTGRES_DB: 'weather'
      # Timezone correction in Docker (Etc/UTC -> Europe/Prague)
      TZ: 'Europe/Prague'

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    ports:
      - "5050:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin
    environment:
      # Login to pgAdmin:
      PGADMIN_DEFAULT_EMAIL: 'root@pgadmin.cz'
      PGADMIN_DEFAULT_PASSWORD: 'postgres'
      # Timezone correction in Docker (Etc/UTC -> Europe/Prague)
      TZ: 'Europe/Prague'
      # If login doesn't work, try:
      #  docker inspect postgres

  # ----------------------------
  # Frontend
  # ----------------------------
  frontend:
    # Superuser:
    #  u: root
    #  e: root@django.cz
    #  p: Wochenende
    image: finduraf/ak8po_frontend:dev
    build: ./frontend
    container_name: frontend
    restart: on-failure
    ports:
      - "8081:8000"
    environment:
      POSTGRES_NAME: 'weather'
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'ak8po'
    depends_on:
      - backend
      - database

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: on-failure
    depends_on:
      - database
    ports:
      - "5052:3000"
    volumes:
      - grafanadata:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'ak8po'

  # ----------------------------
  # Backend
  # ----------------------------
  backend:
    image: finduraf/ak8po_backend:dev
    build: ./backend
    container_name: backend
    restart: on-failure
    environment:
      AK8PO_HOST: 'postgres'
    depends_on:
      - database

# ####################################################################
# Data persistence
# ####################################################################

volumes:
  # Database
  pgdata:
    driver: local
  pgadmindata:
    driver: local
  # Visualisation
  grafanadata:
    driver: local
